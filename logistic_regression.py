# -*- coding: utf-8 -*-
"""logistic_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wk6GzMUQSDNIpmWn0rtKj77D_zU2qxma
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
plt.style.use = 'ggplot'
import seaborn as sns

df = pd.read_csv('/content/car_data.csv')
df

from inspect import modulesbyfile
# understanding our dataset.
print('shape=',df.shape)
df.describe()
# we have five columns userid,gender,age,annual salary,purchased or not
# user id can be dropped as this wont help our model
# we have age of a min of 18 to a max of 63
# min annual salary is 15000 and max is 152500 with a mean of 72689.00

df.info()
# we have an object for gender which will need encoding

# Check for null values and duplicates
df.isna().sum()
# we have no null values
df.duplicated().sum()
# we have no duplicated data

# moving on to EDA
# dropping userid as it is not relevant
df = df.drop(['User ID'],axis = 1)
df.head()

# Visualising the continous columns
fig,ax=plt.subplots(2,3,figsize=(25,15))
sns.distplot(df['Age'],ax=ax[0,0])
sns.boxplot(y=df['Age'],ax=ax[0,1])
sns.histplot(data=df,x='Age',ax=ax[0,2],hue='Purchased',kde=True)

sns.distplot(df['AnnualSalary'],ax=ax[1,0])
sns.boxplot(y=df['AnnualSalary'],ax=ax[1,1])
sns.histplot(data=df,x='AnnualSalary',ax=ax[1,2],hue='Purchased',kde=True)

fig.tight_layout()
fig.subplots_adjust(top=0.95)
plt.suptitle("Visualizing Continuous Columns",fontsize=30)

# observations:
# age:
# no ouliers present,normal distribution,people tend to buy when age<45
# annual salary;
# no outliers, people tend to by cars regardless of the salary but people in range of 40,000 to 85,000 seems to not buy
# Exploring gender
sns.countplot(data = df,x = 'Gender')

plt.pie(df['Purchased'].value_counts(),labels=df['Purchased'].value_counts().index,autopct='%.2f',explode=[0,0.1])
plt.title("Class Imbalance")
plt.show()
# Slight class imbalance found cars not purchased is in the lead by 19.6

fig, ax = plt.subplots(1,2,figsize=(20,10))
sns.histplot(data=df,x = 'Age',ax=ax[0],hue = 'Gender',kde=True)
sns.histplot(data=df,x='AnnualSalary',ax=ax[1],hue="Gender",kde = True)
plt.show()
# There is no big diffrences between data according to the gender

numeric_df = df.select_dtypes(include=[float, int])  # Keep only numeric columns
sns.heatmap(numeric_df.corr(), annot=True)
plt.show()
# Positive correlation between age and target variable.

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import PowerTransformer
from sklearn import set_config
set_config(display='diagram')
transformer = ColumnTransformer(transformers=[('Encoder',OneHotEncoder(drop='first',sparse=False),['Gender']),('Yeo-Johnson',PowerTransformer(),['Age','AnnualSalary'])])

transformer

from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(df.drop(['Purchased'],axis=1),df['Purchased'],random_state=42,stratify=df['Purchased'],shuffle=True)

X_train=transformer.fit_transform(X_train)
X_test=transformer.transform(X_test)

from sklearn.model_selection import RandomizedSearchCV
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_score
from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report
param_grid={'C':[0.001,0.01,0.1,1,10,100], 'max_iter':[50,75,100,200,300,400,500,700]}
log=RandomizedSearchCV(LogisticRegression(solver='lbfgs'),param_grid,cv=5)
log.fit(X_train,y_train)
y_pred_log=log.predict(X_test)
confusion_log=confusion_matrix(y_test,log.predict(X_test))
plt.figure(figsize=(8,8))
sns.heatmap(confusion_log,annot=True)
plt.xlabel("Predicted")
plt.ylabel("Actual")
print(classification_report(y_test,y_pred_log))
# We have an 84 % accuracy model.